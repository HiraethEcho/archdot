#!/bin/bash



read -r rate </sys/class/power_supply/BAT1/current_now
[ "$rate" = 0 ] && notify-send "Battery fully charged" && exit

read -r ac </sys/class/power_supply/AC/online
read -r charge_now </sys/class/power_supply/BAT1/charge_now

if [ "$ac" = 1 ] ; then
    read -r charge_full </sys/class/power_supply/BAT1/charge_full
    val="$(( charge_full-charge_now ))"
else
    val="$charge_now"
fi

hr="$(( val / rate ))"
mn="$(( (val * 60) / rate - hr * 60 ))"
# Prints out battery percentage

case $BLOCK_BUTTON in
	1) notify-send "battery" "$BLOCK_BUTTON" ;;
  2)


case "$hr" in
    0)
        case "$mn" in
            0) notify-send "Battery fully charged" ;;
            1) notify-send "1 minute remaining" ;;
            *) notify-send "$mn minutes remaining" ;;
        esac
        ;;
    1)
        case "$mn" in
            0) notify-send "1 hour remaining" ;;
            1) notify-send "1 hour, 1 minute remaining" ;;
            *) notify-send "1 hour, $mn minutes remaining" ;;
        esac
        ;;
    *)
        case "$mn" in
            0) notify-send "$hr hours remaining" ;;
            1) notify-send "$hr hours, 1 minute remaining" ;;
            *) notify-send "$hr hours, $mn minutes remaining" ;;
        esac
        ;;
esac ;;

	3) notify-send "🔋 Battery module" "🔋: discharging
󰚦: not charging
♻: stagnant charge
: charging
⚡: charged
❗: battery very low!
- Scroll to change adjust xbacklight." ;;
	4) notify-send "battery" "$BLOCK_BUTTON" ;;

	5) notify-send "battery" "$BLOCK_BUTTON" ;;
esac

ICON=""
# rate=$(cat /sys/class/power_supply/BAT1/current_now)
# val=$(cat /sys/class/power_supply/BAT1/charge_now)
# h=$[$val/$rate] 
# m=$[$val*60/$rate-$h*60] 
# printf "rate:%s val:%s h:%s m:%s" "$rate" "$val" "$h" "$m"
# printf "rate:%s val:%s h:%s" "$rate" "$val" "$h" 
capacity=$(cat /sys/class/power_supply/BAT1/capacity)
charging=$(cat /sys/class/power_supply/BAT1/status)

    if [[ $capacity -ge 60 ]]; then
    printf "^c#89b482^"
    elif [[ $capacity -le 30 ]]; then
    printf "^c#e06c75^"
    else
    printf "^c#EBCB8B^"
    fi

		if [[ "$charging" == "Charging" ]]; then
        ICON=
    else
     if [[ $capacity -le 25 ]]; then
       ICON=
     else
       ICON=󰚦
     fi
    fi
    printf "%s^f2^" "$ICON"

    a=$(( (100-capacity)/5))
    # left=$(ibam | awk 'NR==1{print $4}')

    if [[ $capacity -ge 60 ]]; then
    printf "^r0,8,2,5^^r2,5,22,11^^c#000000^^r3,6,%s,9^^f26^^c#89b482^" "$a"
    elif [[ $capacity -le 30 ]]; then
    printf "^r0,8,2,5^^r2,5,22,11^^c#000000^^r3,6,%s,9^^f26^^c#e06c75^" "$a"
    else
    printf "^r0,8,2,5^^r2,5,22,11^^c#000000^^r3,6,%s,9^^f26^^c#EBCB8B^" "$a"
    fi

    printf "%s%%" "$capacity"
